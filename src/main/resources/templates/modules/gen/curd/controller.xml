<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>controller</name>
	<filePath>src/main/java/${packageName}/${moduleName}/web/${subModuleName}</filePath>
	<fileName>${ClassName}Controller.java</fileName>
	<content><![CDATA[
package ${packageName}.${moduleName}.web<#if subModuleName != "">.${subModuleName}</#if>;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.dhc.rad.modules.sys.utils.UserUtils;
import com.dhc.rad.common.config.Global;
import com.dhc.rad.common.persistence.Page;
import com.dhc.rad.common.web.BaseController;
import com.dhc.rad.common.utils.StringUtils;
import ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Service;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.google.common.collect.Maps;
/**
 * ${functionName}Controller
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Controller
@RequestMapping(value = "${r"${adminPath}"}/${urlPrefix}")
public class ${ClassName}Controller extends BaseController {

@Autowired
private ${ClassName}Service ${className}Service;

    @RequestMapping(value = {"list", ""})
        public String list(${ClassName} ${className}, HttpServletRequest request, HttpServletResponse response) {
		return "${lastPackageName}/${viewPrefix}List";
	}

    /*
     * 获取list页面数据
     */
    @RequestMapping(value = {"searchPage"})
    @ResponseBody
    public Map<String,Object> searchPage(${ClassName} ${className}, HttpServletRequest request, HttpServletResponse response) {
        Page<${ClassName}> page = ${className}Service.findPage(new Page<${ClassName}>(request, response), ${className});
        Map<String,Object> returnMap = new HashMap<String,Object>();
        returnMap.put("total", page.getTotalPage());
        returnMap.put("pageNo", page.getPageNo());
        returnMap.put("records", page.getCount());
        returnMap.put("rows", page.getList());
        return returnMap;
    }

    @RequestMapping(value = "form")
    public String form(${ClassName} ${className}, HttpServletRequest request, Model model) {
        if(null!=${className}&&null!=${className}.getId()){
            ${className}=${className}Service.get(${className}.getId());
        }
		model.addAttribute("${className}", ${className});
		return "${lastPackageName}/${viewPrefix}Form";
	}

    /*
     * 保存/更新
     */
    @RequestMapping(value = "save")
    @ResponseBody
    public Map<String,Object>  save(${ClassName} ${className}, Model model, RedirectAttributes redirectAttributes) {
        Map<String,Object> returnMap = new HashMap<String,Object>();

		try{
		if(${className}.getId()==null||"".equals(${className}.getId())){
		   ${className}Service.insert(${className});
		}else{
		   ${className}Service.update(${className});
		}
            addMessageAjax(returnMap, "1", "保存${functionNameSimple}成功");
        }catch (Exception e){
            addMessageAjax(returnMap, "0", "保存${functionNameSimple}失败");
        }
		return returnMap;
	}



    /*
     * 删除
     */
    @RequestMapping(value = "delete")
    @ResponseBody
    public  Map<String,Object> delete(String ids, RedirectAttributes redirectAttributes) {
        Map<String,Object> returnMap = Maps.newHashMap();
        List<String> list = Arrays.asList(ids.split(","));
        ${className}Service.delete(list);
        addMessageAjax(returnMap,"1", "删除${functionNameSimple}成功");
        return returnMap;
    }
}]]>
    </content>
</template>